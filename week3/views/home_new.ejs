<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Restaurants - React</title>

    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>


</head>

<body>
    <header>
        <h1 class="center">
            Restaurants Home Page - by React
        </h1>
    </header>
    <div id="wrapper">

        <div id="root"></div>
        <script type="text/babel">

            // return a list of Restaurants
            const Restaurants = (props) => {
                // props is an array
                const listItems = props.data.map((item) =>
                <li key={item._id} id={item._id} onClick={props.clickHandler}>
                    {item.name}
                </li>);
                return <ul>{listItems}</ul>
            }
        
            const ItemDetail = (props) => {
                return <div>
                <hr />
                    <h3>Restaurant Details</h3>
                    <form>
                        Name: <input type="text" name="name" value={props.item.name || ""} onChange={props.handleChange} /><br/>
                        Cuisine: <input type="text" name="cuisine" value={props.item.cuisine || ""} onChange={props.handleChange}/><br/>
                        Rating: <input type="text" name="rating" value={props.item.rating || ""} onChange={props.handleChange} /><br/>
                        Location: <input type="text" name="location" value={props.item.location || ""} onChange={props.handleChange} /><br/>
                        Business Hours: <input type="text" name="businesshours" value={props.item.businesshours || ""} onChange={props.handleChange} /><br/>
                    </form>
                    <button name="clear" onClick={props.clearForm}>Clear</button>&nbsp;
                </div>
            }
        
        
            const ResApp = (props) => {
                const [items, setItems] = React.useState(<%- restaurants %>);
                const [currentItem, setCurrentItem] = React.useState({});
        
                // list click event handler
                const selectItem = (event) => {
                    const found = items.find((item) => {
                        return item.name === event.target.innerText;
                    });
                    setCurrentItem(found);
                }
        
                const clearForm = () => {
                    setCurrentItem({});
                }
        
                // update list state
                const handleChange = (event) => {
                  let newItem = { ...currentItem } ;
                  newItem[event.target.name] = event.target.value;
                  // update currentItem state
                  setCurrentItem(newItem);
                  // update list state
                  items.find((item, index) => {
                    if (item._id == newItem._id) {
                        items[index] = newItem;
                        setItems(items);
                    }
                  })
                }
        
                return (
                    <div> <h2>Restaurants List</h2>
                        <Restaurants data={items} clickHandler={selectItem} />
                        <ItemDetail
                          item={currentItem}
                          handleChange={handleChange}
                          clearForm={clearForm}
                        />
                    </div>
                );
        
            }
        
            const container = document.getElementById('root');
            const root = ReactDOM.createRoot(container);
            root.render( <ResApp />);
        
        </script>
    </div>
</body>

</html>